{"version":3,"sources":["App.js","index.js"],"names":["App","useState","email","setEmail","className","src","process","alt","options","cursorClassName","autoStart","loop","delay","onInit","typewriter","typeString","pauseFor","deleteAll","start","Provider","value","style","hover","fontSize","href","target","rel","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAmFeA,MA5Ef,WAAgB,IAAD,EAEaC,oBAAS,GAFtB,mBAENC,EAFM,KAECC,EAFD,KAIb,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKC,IAAKC,yBAAoCC,IAAI,SAEpD,qBAAKH,UAAU,OAAf,SACI,cAAC,IAAD,CACEI,QAAS,CACPC,gBAAiB,SACjBC,WAAW,EACXC,MAAM,EACNC,MAAO,IAETC,OAAQ,SAACC,GACPA,EAEGC,WAAW,8BACXC,SAAS,MACTC,YACAF,WAAW,4BACXC,SAAS,MACTC,YACAF,WAAW,kCACXC,SAAS,MACTE,aAKX,cAAC,IAAYC,SAAb,CACEC,MAAO,CAAEC,MAAO,CAAEC,MAAO,OAAQC,SAAU,QAD7C,SAGE,gCACE,mBAAGC,KAAK,oCAAoCC,OAAO,SAASC,IAAI,aAAhE,SACE,cAAC,IAAD,MAEF,mBAAGF,KAAK,yCAAyCC,OAAO,SAASC,IAAI,aAArE,SACE,cAAC,IAAD,MAEF,mBAAGF,KAAK,qCAAqCC,OAAO,SAASC,IAAI,aAAjE,SACE,cAAC,IAAD,MAEF,wBAAQC,QAAS,kBAAMxB,GAAUD,IAAjC,SACE,cAAC,IAAD,WAKHA,GAAS,qBAAKE,UAAU,aAAf,SACR,cAAC,IAAD,CACEI,QAAS,CACPE,WAAW,EACXC,MAAM,EACNF,gBAAiB,SACjBG,MAAO,IAETC,OAAQ,SAACC,GACPA,EAECC,WAAW,2BACXG,mBCnEjBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf64a703.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Typewriter from \"typewriter-effect\";\nimport { FaTwitter, FaGithub, FaLinkedinIn, FaEnvelope } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nimport \"./App.css\";\n\nfunction App() {\n\n  const [email, setEmail] = useState(false);\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <div className=\"image\">\n          <img src={process.env.PUBLIC_URL + \"/me.jpg\"} alt='me'/>\n        </div>\n        <div className=\"type\">\n            <Typewriter\n              options={{\n                cursorClassName: \"cursor\",\n                autoStart: true,\n                loop: true,\n                delay: 75,\n              }}\n              onInit={(typewriter) => {\n                typewriter\n\n                  .typeString(\"My name is Mateus Henrique\")\n                  .pauseFor(1500)\n                  .deleteAll()\n                  .typeString(\"I'm a Software Developer\")\n                  .pauseFor(1500)\n                  .deleteAll()\n                  .typeString(\"I'm a computer science student\")\n                  .pauseFor(1500)\n                  .start();\n              }}\n            />\n        </div>\n\n        <IconContext.Provider\n          value={{ style: { hover: \"blue\", fontSize: \"5vh\" } }}\n        >\n          <nav>\n            <a href=\"https://github.com/fullpistoladev\" target=\"_blank\" rel=\"noreferrer\">\n              <FaGithub />\n            </a>\n            <a href=\"https://www.linkedin.com/in/mathenrifs\" target=\"_blank\" rel=\"noreferrer\">\n              <FaLinkedinIn />\n            </a>\n            <a href=\"https://twitter.com/Fullpistoladev\" target=\"_blank\" rel=\"noreferrer\">\n              <FaTwitter />\n            </a>\n            <button onClick={() => setEmail(!email)}>\n              <FaEnvelope />\n            </button>\n          </nav>\n        </IconContext.Provider>\n\n          {email && <div className=\"type email\">\n            <Typewriter\n              options={{\n                autoStart: true,\n                loop: false,\n                cursorClassName: \"cursor\",\n                delay: 75,\n              }}\n              onInit={(typewriter) => {\n                typewriter\n\n                .typeString(\"mathenrique@ufpi.edu.br\")\n                .start();\n              }}\n            />\n        </div>\n        }\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}